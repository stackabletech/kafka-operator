---
apiVersion: kuttl.dev/v1beta1
kind: TestStep
timeout: 300
---
apiVersion: kafka.stackable.tech/v1alpha1
kind: KafkaCluster
metadata:
  name: test-kafka
spec:
  image:
{% if test_scenario['values']['kafka-latest'].find(",") > 0 %}
    custom: "{{ test_scenario['values']['kafka-latest'].split(',')[1] }}"
    productVersion: "{{ test_scenario['values']['kafka-latest'].split(',')[0] }}"
{% else %}
    productVersion: "{{ test_scenario['values']['kafka-latest'] }}"
{% endif %}
    pullPolicy: IfNotPresent
{% if lookup('env', 'VECTOR_AGGREGATOR') or test_scenario['values']['zookeeper-latest'] != 'false' %}
  clusterConfig:
{% endif %}
{% if lookup('env', 'VECTOR_AGGREGATOR') %}
    vectorAggregatorConfigMapName: vector-aggregator-discovery
{% endif %}
{% if test_scenario['values']['zookeeper-latest'] != 'false' %}
    zookeeperConfigMapName: test-zk
{% else %}
  brokers:
    config:
      logging:
        enableVectorAgent: {{ lookup('env', 'VECTOR_AGGREGATOR') | length > 0 }}
    roleGroups:
      default:
        replicas: 1
{% endif %}
  brokers:
    config:
      logging:
        enableVectorAgent: {{ lookup('env', 'VECTOR_AGGREGATOR') | length > 0 }}
    roleGroups:
      default:
        replicas: 1
  clusterOperation:
    stopped: true
    reconciliationPaused: false
