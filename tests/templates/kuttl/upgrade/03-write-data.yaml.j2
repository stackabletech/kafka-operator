---
apiVersion: kuttl.dev/v1beta1
kind: TestStep
timeout: 300
---
apiVersion: batch/v1
kind: Job
metadata:
  name: write-data
spec:
  template:
    spec:
      serviceAccountName: read-write-data-sa
      containers:
        - name: write-data
          image: edenhill/kcat:1.7.1
          command: [sh, -euo, pipefail, -c]
          args:
            - |
{% if test_scenario['values']['use-client-auth-tls'] == 'true' %}
              export SSL_OPTIONS="-X security.protocol=SSL -X ssl.key.location=/stackable/tls_client/tls.key -X ssl.certificate.location=/stackable/tls_client/tls.crt -X ssl.ca.location=/stackable/tls_client/ca.crt"
{% elif test_scenario['values']['use-client-tls'] == 'true' %}
              export SSL_OPTIONS="-X security.protocol=SSL -X ssl.ca.location=/stackable/tls_client/ca.crt"
{% else %}
              export SSL_OPTIONS=""
{% endif %}
              echo "message written before upgrade" > message
              kcat -b $KAFKA $SSL_OPTIONS -t upgrade-test-data -P message
          env:
            - name: KAFKA
              valueFrom:
                configMapKeyRef:
                  name: test-kafka
                  key: KAFKA
          volumeMounts:
            - mountPath: /stackable/tls_client
              name: tls
      volumes:
        - ephemeral:
            volumeClaimTemplate:
              metadata:
                annotations:
{% if test_scenario['values']['use-client-auth-tls'] == 'true' %}
                  secrets.stackable.tech/class: test-kafka-client-auth-tls
{% else %}
                  secrets.stackable.tech/class: tls
{% endif %}
                  secrets.stackable.tech/scope: pod,node
                creationTimestamp: null
              spec:
                accessModes:
                - ReadWriteOnce
                resources:
                  requests:
                    storage: "1"
                storageClassName: secrets.stackable.tech
                volumeMode: Filesystem
          name: tls
      restartPolicy: Never

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: read-write-data-sa

{% if test_scenario['values']['openshift'] == "true" %}
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: use-privileged-scc
rules:
  - apiGroups: ["security.openshift.io"]
    resources: ["securitycontextconstraints"]
    resourceNames: ["privileged"]
    verbs: ["use"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: use-privileged-scc
subjects:
  - kind: ServiceAccount
    name: read-write-data-sa
roleRef:
  kind: Role
  name: use-privileged-scc
  apiGroup: rbac.authorization.k8s.io
{% endif %}
