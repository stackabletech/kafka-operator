---
apiVersion: kuttl.dev/v1beta1
kind: TestStep
timeout: 300
---
apiVersion: batch/v1
kind: Job
metadata:
  name: write-data
spec:
  template:
    spec:
      containers:
        - name: write-data
          image: edenhill/kcat:1.7.1
          command: [sh, -euo, pipefail, -c]
          args:
            - |
              echo "message written before upgrade" > message
{% if test_scenario['values']['use-client-tls'] == 'true' %}
              kcat -b $KAFKA -X security.protocol=SSL -X ssl.key.location=/stackable/certificates/tls.key -X ssl.certificate.location=/stackable/certificates/tls.crt -X ssl.ca.location=/stackable/certificates/ca.crt -t upgrade-test-data -P message
{% else %}
              kcat -b $KAFKA -t upgrade-test-data -P message
{% endif %}
          env:
            - name: KAFKA
              valueFrom:
                configMapKeyRef:
                  name: simple-kafka
                  key: KAFKA
{% if test_scenario['values']['use-client-tls'] == 'true' %}
          volumeMounts:
            - mountPath: /stackable/certificates
              name: tls
      volumes:
        - ephemeral:
            volumeClaimTemplate:
              metadata:
                annotations:
                  secrets.stackable.tech/class: tls
                  secrets.stackable.tech/scope: pod,node
                creationTimestamp: null
              spec:
                accessModes:
                - ReadWriteOnce
                resources:
                  requests:
                    storage: "1"
                storageClassName: secrets.stackable.tech
                volumeMode: Filesystem
          name: tls
{% endif %}
      restartPolicy: Never
