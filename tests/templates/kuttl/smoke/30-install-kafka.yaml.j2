---
apiVersion: kuttl.dev/v1beta1
kind: TestStep
timeout: 300
---
apiVersion: kafka.stackable.tech/v1alpha1
kind: KafkaCluster
metadata:
  name: test-kafka
spec:
  image:
{% if test_scenario['values']['kafka'].find(",") > 0 %}
    custom: "{{ test_scenario['values']['kafka'].split(',')[1] }}"
    productVersion: "{{ test_scenario['values']['kafka'].split(',')[0] }}"
{% else %}
    productVersion: "{{ test_scenario['values']['kafka'] }}"
{% endif %}
    pullPolicy: IfNotPresent
  clusterConfig:
    tls:
{% if test_scenario['values']['use-client-tls'] == 'true' %}
      serverSecretClass: tls
{% else %}
      serverSecretClass: null
{% endif %}
{% if lookup('env', 'VECTOR_AGGREGATOR') %}
    vectorAggregatorConfigMapName: vector-aggregator-discovery
{% endif %}
    zookeeperConfigMapName: test-zk
  brokers:
    configOverrides:
      broker.properties:
        compression.type: uncompressed # overridden by role group below
        controller.quorum.election.backoff.max.ms: "2000"
    envOverrides:
      COMMON_VAR: role-value # overridden by role group below
      ROLE_VAR: role-value   # only defined here at role level
    config:
      logging:
        enableVectorAgent: {{ lookup('env', 'VECTOR_AGGREGATOR') | length > 0 }}
      requestedSecretLifetime: 7d
    roleGroups:
      default:
        replicas: 1
        envOverrides:
          COMMON_VAR: group-value # overrides role value
          GROUP_VAR: group-value # only defined here at group level
        configOverrides:
          broker.properties:
            compression.type: snappy
            controller.quorum.fetch.timeout.ms: "3000"
        podOverrides:
          spec:
            containers:
              - name: kafka
                resources:
                  requests:
                    cpu: 300m
                  limits:
                    cpu: 1100m
